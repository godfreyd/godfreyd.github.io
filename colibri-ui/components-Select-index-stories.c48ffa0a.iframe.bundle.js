"use strict";(self.webpackChunkcolibri_ui=self.webpackChunkcolibri_ui||[]).push([[879],{"./src/components/Select/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Error:()=>Error,FullWidth:()=>FullWidth,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Select/index.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"UI/Select",parameters:{layout:"centered"},argTypes:{},component:___WEBPACK_IMPORTED_MODULE_1__.A},options=Array(5).fill(null).map(((_,i)=>({label:react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,"options")," ",String(i)),value:String(i)}))),Template=args=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();return react__WEBPACK_IMPORTED_MODULE_0__.createElement(___WEBPACK_IMPORTED_MODULE_1__.A,{...args,value,options,onChange:v=>setValue(v)})},Default=Template.bind({});Default.args={placeholder:"select options",label:"Label",hint:"hint"};const Error=Template.bind({});Error.args={placeholder:"select options",error:!0,label:"Label",hint:"hint"};const FullWidth=Template.bind({});FullWidth.args={placeholder:"select options",label:"Label",hint:"hint",fullWidth:!0};const __namedExportsOrder=["Default","Error","FullWidth"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string>();\n  return <Select {...args} value={value} options={options} onChange={v => setValue(v)} />;\n}",...Default.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string>();\n  return <Select {...args} value={value} options={options} onChange={v => setValue(v)} />;\n}",...Error.parameters?.docs?.source}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"args => {\n  const [value, setValue] = useState<string>();\n  return <Select {...args} value={value} options={options} onChange={v => setValue(v)} />;\n}",...FullWidth.parameters?.docs?.source}}}}}]);